<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:fieldinfotoollistservice="services.fieldinfotoollistservice.*"
			   xmlns:fieldinfoservicelistassetdefaultservice="services.fieldinfoservicelistassetdefaultservice.*"
			   xmlns:fieldinfoservicelistservice="services.fieldinfoservicelistservice.*"
			   width="100%" height="100%" implements="icd.mgmtview.api.IManagementView"
			   resize="onApplicationResize(event)" close="closeHandler(event)">
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import icd.mgmtview.api.constant.ManagementViewConst;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import valueObjects.Allinfo_adefaultAdvanced;
			import valueObjects.Allinfo_service_asset;
			import valueObjects.Allinfo_servicelist;
			import valueObjects.Allinfo_servicelist_assetdefault;
			import valueObjects.Allinfo_toollist;
			import valueObjects.Allsensor_unit;
			
			[Bindable] private var MODE:int;
			[Bindable] private var titleName:String;
			[Bindable] private var checkSave:Boolean = true;
			[Bindable] public static var slistVO:Allinfo_servicelist = new Allinfo_servicelist();
			
			public function onApplicationResize(event:Event):void{
				this.height = parentApplication.height;
				this.width  = parentApplication.width;
			}
			
			protected function changeHandler():void{
				checkSave = false;
			}
			protected function closeHandler(event:CloseEvent):void{
				if(checkSave === true){
					PopUpManager.removePopUp(this);
				}else{
					Alert.show("Click Yes to save your changes", "Please confirm", Alert.YES | Alert.NO, this, AlertSaveClosed, null, Alert.YES);	
				}
			}
			protected function AlertSaveClosed(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					if(txtName.text !== ""){
						//prepareSave();
					}if(txtName.text === ""){
						Alert.show('Please select "Name"','Fields with Asterisk (*)');
					}	
				}else if(eventObj.detail===Alert.NO) {
					PopUpManager.removePopUp(this);
				}
			}
			
			public function prepareview(mode:int, titleName:String, objVO:Object=null):void{
				this.title = titleName;
				this.MODE = mode;
				
				if(this.MODE === ManagementViewConst.MODE_ADD){
					slistVO 				= new Allinfo_servicelist;
					slistVO.slistID			= "SVL" + new Date().valueOf().toString(); 
					slistVO.slist_active	= "1";
				}else if(this.MODE === ManagementViewConst.MODE_EDIT){
					slistVO = objVO as Allinfo_servicelist;
				}
				getAllField_infotoollistActiveResult.token = fieldinfotoollistService.getAllField_infotoollistActive();
				getField_infoservicelist_assetdefaultByslistIDResult.token = fieldinfoservicelistassetdefaultService.getField_infoservicelist_assetdefaultByslistID(slistVO.slistID);
			}
		
			[Bindable] private var arrTool:ArrayCollection = new ArrayCollection();
			protected function getAllField_infotoollistActiveResult_resultHandler(event:ResultEvent):void{
				arrTool = event.result as ArrayCollection;
			}
			[Bindable] private var arrDefault:ArrayCollection = new ArrayCollection();
			[Bindable] private var showDefault:String = '0';
			protected function getField_infoservicelist_assetdefaultByslistIDResult_resultHandler(event:ResultEvent):void{
				arrDefault = event.result as ArrayCollection;
				if(arrDefault.length>0){
					showDefault = '1';
				}else{
					showDefault = '0';
				}
			}
			
			protected function lbtnSave_clickHandler(event:MouseEvent):void{
				if(txtName.text !== ""){
					Alert.show('Please confirm!', 'Confirm Save', Alert.YES | Alert.NO, this, AlerSave, null, Alert.YES);
				}if(txtName.text === ""){
					Alert.show('Please select "Name"','Fields with Asterisk (*)');
				}	
			}
			protected function AlerSave(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					prepareSave();
				}
			}
			protected function prepareSave():void{
				var updateInfoProject:Allinfo_servicelist 	= new Allinfo_servicelist();
				updateInfoProject.slistNo					= slistVO.slistNo;
				updateInfoProject.slistID					= slistVO.slistID;
				updateInfoProject.slist_name				= txtName.text;
				updateInfoProject.slist_note				= txtNote.text;
				updateInfoProject.slist_active				= chkActive.selected? "1":"0";
				updateInfoProject.slist_showDefault			= showDefault;
				if(this.MODE === ManagementViewConst.MODE_ADD){
					createField_infoservicelistResult.token = fieldinfoservicelistService.createField_infoservicelist(updateInfoProject);
				}else if(this.MODE === ManagementViewConst.MODE_EDIT){
					updateField_infoservicelistResult.token = fieldinfoservicelistService.updateField_infoservicelist(updateInfoProject);
				}
			}
			protected function infoservicelistResult_resultHandler(event:ResultEvent):void{
				checkSave = true;
				this.closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
			
			public function alertAddTool():void{
				checkSave = false;
				 var checkDuplicate:Boolean = false;
				for each(var item:Allinfo_adefaultAdvanced in arrDefault){
					if(item.adefault_toolID === dgTool.selectedItem.toolID){
						Alert.show('This Asset List is duplicate.','Warning !!!');
						checkDuplicate = true;
						break;
					}if(item.adefault_1 !== ""){
						Alert.show('This Asset Allowed Only One','Warning !!!');
						checkDuplicate = true;
						break;
					}
					
				}
				if(!checkDuplicate){
					var createAssetDefault:Allinfo_servicelist_assetdefault = new Allinfo_servicelist_assetdefault();
					createAssetDefault.adefaultID					= "ASDF" + new Date().valueOf().toString();
					createAssetDefault.adefault_slistID				= slistVO.slistID;
					createAssetDefault.adefault_toolID				= dgTool.selectedItem.toolID;
					createAssetDefault.adefault_1					= dgTool.selectedItem.tool_1;
					createField_infoservicelist_assetdefaultResult.token = fieldinfoservicelistassetdefaultService.createField_infoservicelist_assetdefault(createAssetDefault);	
				}  
			}
			
			[Bindable] private var clickDel:String;
			public function alertDelete ():void{
				checkSave = false;
				clickDel = dgDefault.selectedItem.adefaultNo;
				Alert.show("Are you sure?", "Confirm Delete", Alert.YES | Alert.NO, this, clickDelete, null, Alert.YES);
			}
			
			protected function clickDelete(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					deleteField_infoservicelist_assetdefaultResult.token = fieldinfoservicelistassetdefaultService.deleteField_infoservicelist_assetdefault(clickDel);
				}
			}
			
			protected function infoservicelist_assetdefaultResult_resultHandler(event:ResultEvent):void{
				getField_infoservicelist_assetdefaultByslistIDResult.token = fieldinfoservicelistassetdefaultService.getField_infoservicelist_assetdefaultByslistID(slistVO.slistID);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		
		<fieldinfotoollistservice:FieldinfotoollistService id="fieldinfotoollistService"
														   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
														   showBusyCursor="true"/>
		<s:CallResponder id="getAllField_infotoollistActiveResult" result="getAllField_infotoollistActiveResult_resultHandler(event)"/>
		
		<fieldinfoservicelistassetdefaultservice:FieldinfoservicelistassetdefaultService id="fieldinfoservicelistassetdefaultService"
																						 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
																						 showBusyCursor="true"/>
		<s:CallResponder id="getField_infoservicelist_assetdefaultByslistIDResult" result="getField_infoservicelist_assetdefaultByslistIDResult_resultHandler(event)"/>
		<s:CallResponder id="createField_infoservicelist_assetdefaultResult" result="infoservicelist_assetdefaultResult_resultHandler(event)"/>
		<s:CallResponder id="deleteField_infoservicelist_assetdefaultResult" result="infoservicelist_assetdefaultResult_resultHandler(event)"/>
		
		
		<fieldinfoservicelistservice:FieldinfoservicelistService id="fieldinfoservicelistService"
																 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
																 showBusyCursor="true"/>
		<s:CallResponder id="createField_infoservicelistResult" result="infoservicelistResult_resultHandler(event)"/>
		<s:CallResponder id="updateField_infoservicelistResult" result="infoservicelistResult_resultHandler(event)"/>
		

	</fx:Declarations>
	<s:BorderContainer left="0" right="0" top="0" bottom="0" borderVisible="false">
		<s:Label left="10" top="5" height="20" fontSize="11" fontStyle="italic" fontWeight="bold"
				 text="Services Infomation" textAlign="left" verticalAlign="middle"/>
		<mx:HRule left="10" top="27" width="150"/>
		<mx:LinkButton id="lbtnSave" right="10" top="5" width="35" height="20"
					   click="lbtnSave_clickHandler(event)" color="#000000"
					   enabled="{checkSave === false}" focusColor="#70B2EE" fontWeight="bold"
					   icon="@Embed(source='../images/save_before.png')" paddingLeft="0"
					   paddingRight="0" toolTip="Click to Save"/>
		<mx:LinkButton id="lbtnSaved" visible="{checkSave === true}" right="10" top="5" width="35"
					   height="20" color="#000000" focusColor="#A2CBEA" fontSize="11"
					   fontWeight="bold" icon="@Embed(source='../images/save_after.png')"
					   paddingLeft="5" paddingRight="5" rollOverColor="#A2CBEA"
					   selectionColor="#A2CBEA" toolTip="Saved"/>
		<s:VGroup top="40" horizontalCenter="0">
			<s:HGroup right="5" top="40" gap="20">
				<s:VGroup gap="20">
					<s:Label width="50" height="25" color="#FF0000" fontFamily="Arial" fontSize="10"
							 fontWeight="bold" text="* Name :" textAlign="right" verticalAlign="middle"/>
				</s:VGroup>
				<s:VGroup gap="30">
					<s:HGroup gap="20">
						<s:TextInput id="txtName" width="420" height="25" borderColor="#23AAE2"
									 borderVisible="true" change="changeHandler()" text="{slistVO.slist_name}"/>
						<s:CheckBox id="chkActive" width="50" height="25" label="Active"
									change="changeHandler()" fontSize="10" fontWeight="normal"
									selected="{slistVO.slist_active === '1'}"/>
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
			
			<s:HGroup right="5" top="70" width="37%" gap="20">
				<s:VGroup gap="20">
					<s:Label width="50" height="25" fontFamily="Arial" fontSize="10" text="Note :"
							 textAlign="right" verticalAlign="middle"/>
				</s:VGroup>
				<s:VGroup gap="20">
					<s:HGroup>
						<s:TextArea id="txtNote" width="490" height="80" borderColor="#23AAE2"
									borderVisible="true" change="changeHandler()"
									text="{slistVO.slist_note}" textAlign="left"/>
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
			
		</s:VGroup>
		
		<s:Scroller left="5" right="5" top="160" bottom="5">
			<s:HGroup width="100%" height="100%" chromeColor="#FF9999" fontFamily="Arial" fontSize="10" verticalAlign="middle"> 
				
				<s:BorderContainer left="5" top="10" bottom="5" width="50%" height="100%"
								   borderColor="#23AAE2" borderWeight="2" cornerRadius="2">
					<mx:DataGrid id="dgTool" left="5" right="5" top="30" bottom="5" borderVisible="false"
								 chromeColor="#23AAE2" dataProvider="{arrTool}" fontFamily="Arial" fontSize="10"
								 fontWeight="normal" variableRowHeight="true"
								 verticalGridLineColor="0xFFFFFF">
						<mx:columns>
							<mx:DataGridColumn width="200" dataField="tool_name" headerText="Asset Name" textAlign="center"
											   headerStyleName="centerBold"/>
							<mx:DataGridColumn width="150" dataField="tool_type" headerText="Type" textAlign="center"
											   headerStyleName="centerBold"/>
							<mx:DataGridColumn dataField="tool_note" headerText="Note" textAlign="center"
											   headerStyleName="centerBold"/>
							<mx:DataGridColumn width="50" dataField="" headerText="" textAlign="center"
											   headerStyleName="centerBold">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox horizontalAlign="center" verticalAlign="top">
											<mx:LinkButton icon="@Embed(source='../images/bullet_go.png')"  width="16" height="16"
														   toolTip="Click to Add Tool String" click="outerDocument.alertAddTool()"/>
										</mx:HBox>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
					<s:Label left="5" right="5" top="5" height="25" backgroundColor="#23AAE2"
							 color="#000000" fontSize="11" fontWeight="bold" text="Asset List"
							 textAlign="center" verticalAlign="middle"/>
				</s:BorderContainer>
				<s:BorderContainer right="5" top="10" bottom="5" width="50%" height="100%"
								   borderColor="#23AAE2" borderWeight="2" cornerRadius="2">
					<mx:DataGrid id="dgDefault" left="5" right="5" top="30" bottom="5" borderVisible="false"
								 chromeColor="#23AAE2" dataProvider="{arrDefault}" fontFamily="Arial" fontSize="10"
								 fontWeight="normal" variableRowHeight="true"
								 verticalGridLineColor="0xFFFFFF">
						<mx:columns>
							<mx:DataGridColumn dataField="tool_name" headerText="Asset Name" textAlign="center"
											   headerStyleName="centerBold"/>
							<mx:DataGridColumn width="50" dataField="" headerText="" textAlign="center"
													   headerStyleName="centerBold">
								<mx:itemRenderer>
									<fx:Component>
										<mx:HBox horizontalAlign="center" verticalAlign="top" width="70">
											<mx:LinkButton id="btnGridDelete" icon="@Embed(source='../images/delete.png')" width="16" height="16"
														   toolTip="Click to delete" click="outerDocument.alertDelete()"/>
										</mx:HBox>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
					<s:Label left="5" right="5" top="5" height="25" backgroundColor="#23AAE2"
							 color="#000000" fontSize="11" fontWeight="bold" text="Default Asset"
							 textAlign="center" verticalAlign="middle"/>
				</s:BorderContainer>
			</s:HGroup>
		</s:Scroller>
	</s:BorderContainer>
	
</s:TitleWindow>
