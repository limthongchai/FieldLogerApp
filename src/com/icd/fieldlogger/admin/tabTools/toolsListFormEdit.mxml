<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:fieldinfosensorservice="services.fieldinfosensorservice.*"
			   xmlns:fieldinfotoollistservice="services.fieldinfotoollistservice.*"
			   width="800" height="600" backgroundColor="#23AAE2" borderVisible="false"
			   close="closeHandler(event)" fontSize="11"
			   implements="icd.mgmtview.api.IManagementView" title="{titleName}">
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import icd.mgmtview.api.constant.ManagementViewConst;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.DropDownEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import valueObjects.Allinfo_sensor;
			import valueObjects.Allinfo_toollist;


			
			[Bindable] private var MODE:int;
			[Bindable] private var titleName:String;
			[Bindable] private var checkSave:Boolean = true;
			[Bindable] public static var toolVO:Allinfo_toollist = new Allinfo_toollist();
			
			public function onApplicationResize(event:Event):void{}
			protected function changeHandler():void{
				checkSave = false;
			}
			
			protected function closeHandler(event:CloseEvent):void{
				if(checkSave === true){
					PopUpManager.removePopUp(this);
				}else{
					Alert.show("Click Yes to save your changes", "Please confirm", Alert.YES | Alert.NO, this, AlertSaveClosed, null, Alert.YES);	
				}
			}
			protected function AlertSaveClosed(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					if(txtName.text !== ""){
						prepareSave();
					}if(txtName.text === ""){
						Alert.show('Please select "Name"','Fields with Asterisk (*)');
					}	
				}else if(eventObj.detail===Alert.NO) {
					PopUpManager.removePopUp(this);
				}
			}
			
			public function prepareview(mode:int, titleName:String, objVO:Object=null):void{
				this.title = titleName;
				this.MODE = mode;
				if(this.MODE === ManagementViewConst.MODE_ADD){
					toolVO							= new Allinfo_toollist();
					toolVO.toolID					= "T" + new Date().valueOf().toString();
					toolVO.tool_active				= "1";
					toolVO.tool_type				= "Web Sensor";
				}else if(this.MODE === ManagementViewConst.MODE_EDIT){
					toolVO = objVO as Allinfo_toollist;
				}
				getAlltool_typeResult.token = fieldinfotoollistService.getAlltool_type();
				getField_infosensorByToolIDResult.token = fieldinfosensorService.getField_infosensorByToolID(toolVO.toolID);
			}
			
			protected function lbtnSave_clickHandler(event:MouseEvent):void{
				if(txtName.text !== ""){
					Alert.show('Please confirm!', 'Confirm Save', Alert.YES | Alert.NO, this, AlerSave, null, Alert.YES);
				}if(txtName.text === ""){
					Alert.show('Please select "Name"','Fields with Asterisk (*)');
				}
			}
			protected function AlerSave(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					prepareSave();
				}
			}
			protected function prepareSave():void{
				var updateTool:Allinfo_toollist 	= new Allinfo_toollist();
				updateTool.toolNo					= toolVO.toolNo;
				updateTool.toolID					= toolVO.toolID;
				updateTool.tool_name				= txtName.text;
				updateTool.tool_type  				= cboType.textInput.text;
				updateTool.tool_note				= txtNote.text;
				updateTool.tool_sensor				= checkSensor;
				updateTool.tool_active				= chkActive.selected? "1":"0";
				updateTool.tool_1					= txtLink.text;
				if(this.MODE === ManagementViewConst.MODE_ADD){
					createField_infotoollistResult.token = fieldinfotoollistService.createField_infotoollist(updateTool);
				}else if(this.MODE === ManagementViewConst.MODE_EDIT){
					updateField_infotoollistResult.token = fieldinfotoollistService.updateField_infotoollist(updateTool);
				}
			}
			protected function infotoollistResult_resultHandler(event:ResultEvent):void{
				checkSave = true;
				this.closeButton.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
		
			[Bindable] private var arrSensor:ArrayCollection = new ArrayCollection();
			[Bindable] private var checkSensor:String = "0";
			protected function getField_infosensorByToolIDResult_resultHandler(event:ResultEvent):void{
				arrSensor = event.result as ArrayCollection;
				if(arrSensor.length > 0){
					checkSensor = "1";
				}else{
					checkSensor = "0";
				}
			}
			
			protected function lbtnAddSensor_clickHandler(event:MouseEvent):void{
				var ttwdEdit:sensorFormEdit = new sensorFormEdit();
				ttwdEdit.prepareview(ManagementViewConst.MODE_ADD, "Create New Sensor");
				PopUpManager.addPopUp(ttwdEdit,this,true);
				//ttwdEdit.x = 10;
				//ttwdEdit.y = 10;
				PopUpManager.centerPopUp(ttwdEdit);
				ttwdEdit.isPopUp = true; 
				ttwdEdit.addEventListener(CloseEvent.CLOSE, alphaPopupCloseHandler);
			}
			public function alertEdit():void{
				checkSave = false;
				var ttwdEdit:sensorFormEdit = new sensorFormEdit();
				ttwdEdit.prepareview(ManagementViewConst.MODE_EDIT, "Update Sensor", dgSensor.selectedItem as Allinfo_sensor);
				PopUpManager.addPopUp(ttwdEdit,this,true);
				//ttwdEdit.x = 10;
				//ttwdEdit.y = 10;
				PopUpManager.centerPopUp(ttwdEdit);
				ttwdEdit.isPopUp = true; 
				ttwdEdit.addEventListener(CloseEvent.CLOSE, alphaPopupCloseHandler);
			}
			[Bindable] private var clickDel:int;
			public function alertDelete():void{
				checkSave = false;
				clickDel = dgSensor.selectedItem.sensorNo;
				Alert.show("Are you sure?", "Confirm Delete", Alert.YES | Alert.NO, this, clickDelete, null, Alert.YES);
			}
			
			protected function clickDelete(eventObj:CloseEvent):void {
				if(eventObj.detail==Alert.YES) {
					deleteField_infosensorResult.token = fieldinfosensorService.deleteField_infosensor(clickDel);
				}
			}
			
			private function alphaPopupCloseHandler(e:CloseEvent):void{
				getField_infosensorByToolIDResult.token = fieldinfosensorService.getField_infosensorByToolID(toolVO.toolID);
			}
			protected function deleteField_infosensorResult_resultHandler(event:ResultEvent):void{
				getField_infosensorByToolIDResult.token = fieldinfosensorService.getField_infosensorByToolID(toolVO.toolID);
			}

			protected function cboType_closeHandler(event:DropDownEvent):void{
				if(cboType.textInput.text === "Web Sensor"){
					txtLink.enabled = true;
				}else{
					txtLink.text = "";
					txtLink.enabled = false;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>

		<fieldinfotoollistservice:FieldinfotoollistService id="fieldinfotoollistService"
														   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
														   showBusyCursor="true"/>
		<s:CallResponder id="createField_infotoollistResult" result="infotoollistResult_resultHandler(event)"/>
		<s:CallResponder id="updateField_infotoollistResult" result="infotoollistResult_resultHandler(event)"/>
		
		<fieldinfosensorservice:FieldinfosensorService id="fieldinfosensorService"
													   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
													   showBusyCursor="true"/>
		<s:CallResponder id="getField_infosensorByToolIDResult" result="getField_infosensorByToolIDResult_resultHandler(event)"/>
		<s:CallResponder id="deleteField_infosensorResult" result="deleteField_infosensorResult_resultHandler(event)"/>
		<s:CallResponder id="getAlltool_typeResult"/>
		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer left="5" right="5" top="5" bottom="5" borderVisible="false" cornerRadius="5">
		<s:Label left="10" top="5" height="20" fontSize="11" fontStyle="italic" fontWeight="bold"
				 text="Tools Infomation" textAlign="left" verticalAlign="middle"/>
		<mx:HRule left="10" top="27" width="120"/>
		<s:HGroup top="40" horizontalCenter="0">
			<s:VGroup gap="20">
				<s:Label width="50" height="25" color="#FF0000" fontFamily="Arial" fontSize="10"
						 fontWeight="bold" text="* Name :" textAlign="right" verticalAlign="middle"/>
				<s:Label width="50" height="25" fontFamily="Arial" fontSize="10"
						 text="Type :" textAlign="right" verticalAlign="middle"/>
				<s:Label width="50" height="25" fontFamily="Arial" fontSize="10" text="Link :"
						 textAlign="right" verticalAlign="middle"/>
				<s:Label width="50" height="25" fontFamily="Arial" fontSize="10" text="Note :"
						 textAlign="right" verticalAlign="middle"/>
			</s:VGroup>
			<s:VGroup gap="20">
				<s:HGroup>
					<s:TextInput id="txtName" width="400" height="25" borderColor="#23AAE2"
								 borderVisible="true" change="changeHandler()" text="{toolVO.tool_name}"/>
					<s:CheckBox id="chkActive" height="25" label="Active" fontSize="10" change="changeHandler()" 
								selected="{toolVO.tool_active === '1'}" />
				</s:HGroup>
				<s:ComboBox id="cboType" width="400" height="25" close="cboType_closeHandler(event);changeHandler()"
							labelField="tool_type" selectedItem="{toolVO.tool_type}"
							toolTip="Please enter or select Type">
					<s:AsyncListView list="{getAlltool_typeResult.lastResult}"/>
				</s:ComboBox>
				<s:TextInput id="txtLink" width="400" height="25" borderColor="#23AAE2"
							 borderVisible="true" change="changeHandler()" text="{toolVO.tool_1}"
							 prompt="-- Domain Name or IP and Port --" enabled="{toolVO.tool_type === 'Web Sensor'}"/>
				<s:TextArea id="txtNote" width="400" height="70" borderColor="#23AAE2"
							borderVisible="true" change="changeHandler()" text="{toolVO.tool_note}"/>
			</s:VGroup>
			
		</s:HGroup>
		<mx:LinkButton id="lbtnSave" right="5" top="5" width="35" height="20"
					   click="lbtnSave_clickHandler(event)" color="#000000"
					   enabled="{checkSave === false}" focusColor="#70B2EE" fontWeight="bold"
					   icon="@Embed(source='../images/save_before.png')" paddingLeft="0"
					   paddingRight="0" toolTip="Click to Save"/>
		<mx:LinkButton id="lbtnSaved" visible="{checkSave === true}" right="5" top="5" width="35"
					   height="20" color="#000000" focusColor="#A2CBEA" fontSize="11"
					   fontWeight="bold" icon="@Embed(source='../images/save_after.png')"
					   paddingLeft="5" paddingRight="5" rollOverColor="#A2CBEA"
					   selectionColor="#A2CBEA" toolTip="Saved"/>
		<s:Panel left="5" right="5" top="250" bottom="5" borderVisible="false"
				 chromeColor="#23AAE2" dropShadowVisible="false">
			<mx:LinkButton id="lbtnAddSensor" left="10" top="-26" height="20" label="Add New Sensor"
						   click="lbtnAddSensor_clickHandler(event);changeHandler()" color="#000000"
						   fontSize="10" fontStyle="italic" fontWeight="bold"
						   icon="@Embed(source='../images/add1.png')" paddingLeft="5"
						   paddingRight="5" toolTip="start synchronization"/>
			<mx:DataGrid id="dgSensor" left="0" right="0" top="0" bottom="0" borderVisible="false"
						 chromeColor="#23AAE2" dataProvider="{arrSensor}" fontFamily="Arial" fontSize="10"
						 fontWeight="normal" variableRowHeight="true"
						 verticalGridLineColor="0xFFFFFF">
				<mx:columns>
					<mx:DataGridColumn width="50" dataField="" headerText="" textAlign="center"
									   wordWrap="true" headerStyleName="centerBold">
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox horizontalAlign="center" verticalAlign="top">

										<mx:LinkButton icon="@Embed(source='../images/delete.png')" width="16" height="16"
													   toolTip="Click to delete" click="outerDocument.alertDelete()"/>
										<mx:LinkButton id="btnGridEdit" icon="@Embed(source='../images/modify12.png')" width="16" height="16"
													   toolTip="Click to edit" click="outerDocument.alertEdit()" />
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn dataField="sensor_name" headerText="Sensor Name" textAlign="center"
									   wordWrap="true" headerStyleName="centerBold"/>
					<mx:DataGridColumn width="60" dataField="sensor_unit" headerText="Unit" textAlign="center"
									   headerStyleName="centerBold" wordWrap="true"/>
					<mx:DataGridColumn width="60" dataField="sensor_gain_a" headerText="a" textAlign="center"
									   headerStyleName="centerBold" wordWrap="true"/>
					<mx:DataGridColumn width="60" dataField="sensor_offset_b" headerText="b" textAlign="center"
									   headerStyleName="centerBold" wordWrap="true"/>
					<mx:DataGridColumn width="60" dataField="sensor_min" headerText="Min" textAlign="center"
									   headerStyleName="centerBold" wordWrap="true"/>
					<mx:DataGridColumn width="60" dataField="sensor_max" headerText="Max" textAlign="center"
									   headerStyleName="centerBold" wordWrap="true"/>
				
				</mx:columns>
			</mx:DataGrid>
		</s:Panel>
	</s:BorderContainer>
	
</s:TitleWindow>
